{"name": "Проверка загрузки страницы", "status": "failed", "statusDetails": {"message": "AssertionError: assert 'Пицца «Пепперони»' == ''\n  + Пицца «Пепперони»", "trace": "self = <final_work.TestValidate object at 0x000002EA7D850740>\nget_driver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"14a5e6bbd6fa9017dd4fd3eb52947e16\")>\n\n    @allure.title('Проверка загрузки страницы')\n    def test_1(self, get_driver):\n        with allure.step('Переход на сайт https://pizzeria.skillbox.cc/'):\n            get_driver.get('https://pizzeria.skillbox.cc/')\n            time.sleep(5)\n        with allure.step('Добавить пиццу \"Как у бабушки\" «В корзину».'):\n            get_driver.find_element(By.XPATH, '(//*[contains(@data-product_id, \"423\")])[2]').click()\n            time.sleep(5)\n        with allure.step('Добавить пиццу \"Рай\" «В корзину».'):\n            get_driver.find_element(By.XPATH, '(//*[contains(@data-product_id, \"421\")])[2]').click()\n            time.sleep(5)\n        with allure.step('Переключить слайдер вправо.'):\n            get_driver.find_element(By.XPATH, '//*[contains(@class, \"slick-next\")]').click()\n            time.sleep(5)\n        with allure.step('Добавить пиццу \"Пепперони\" «В корзину».'):\n            get_driver.find_element(By.XPATH, '(//*[contains(@data-product_id, \"417\")])[2]').click()\n            time.sleep(5)\n    \n            # expected_pizza = [\"Пицца «Пепперони»\"]\n            # pizza = get_driver.find_element(By.XPATH, '(//*[contains(@title, \"Пицца «Пепперони»\")])[1]')\n            #\n            # for expected in expected_pizza:\n            #     assert expected in pizza, f\"Ожидалось увидеть пиццу '{pizza}', но он не найден.\"\n        # with allure.step('Переключить слайдер влево.'):\n        #     get_driver.find_element(By.XPATH, '//*[contains(@class, \"slick-prev\")]').click()\n        #     time.sleep(5)\n        with allure.step('Проверить, что при переключении слайдера вправо пицца \"Папперони\" появляется в слайдере.'):\n            expected_pizza = get_driver.find_element(By.XPATH, '(//li/div/a)[17]')\n>           assert 'Пицца «Пепперони»' == expected_pizza.text\nE           AssertionError: assert 'Пицца «Пепперони»' == ''\nE             + Пицца «Пепперони»\n\nfinal_work.py:49: AssertionError"}, "steps": [{"name": "Переход на сайт https://pizzeria.skillbox.cc/", "status": "passed", "start": 1736607547451, "stop": 1736607554411}, {"name": "Добавить пиццу \"Как у бабушки\" «В корзину».", "status": "passed", "start": 1736607554411, "stop": 1736607559492}, {"name": "Добавить пиццу \"Рай\" «В корзину».", "status": "passed", "start": 1736607559492, "stop": 1736607564570}, {"name": "Переключить слайдер вправо.", "status": "passed", "start": 1736607564570, "stop": 1736607569645}, {"name": "Добавить пиццу \"Пепперони\" «В корзину».", "status": "passed", "start": 1736607569645, "stop": 1736607574717}, {"name": "Проверить, что при переключении слайдера вправо пицца \"Папперони\" появляется в слайдере.", "status": "failed", "statusDetails": {"message": "AssertionError: assert 'Пицца «Пепперони»' == ''\n  + Пицца «Пепперони»\n", "trace": "  File \"C:\\Users\\Serjan777\\PycharmProjects\\pythonProject\\Tests\\homework\\final_work.py\", line 49, in test_1\n    assert 'Пицца «Пепперони»' == expected_pizza.text\n"}, "start": 1736607574717, "stop": 1736607574754}], "attachments": [{"name": "log", "source": "ab23b0c9-26c4-40a7-b7c5-15e550fb9984-attachment.txt", "type": "text/plain"}], "start": 1736607547451, "stop": 1736607574759, "uuid": "4dc4a0b3-e226-4ae2-9240-13b01d65a3ac", "historyId": "5afa0c4d373842a22474c1eadd3c9483", "testCaseId": "5afa0c4d373842a22474c1eadd3c9483", "fullName": "Tests.homework.final_work.TestValidate#test_1", "labels": [{"name": "story", "value": "Waiting page load"}, {"name": "feature", "value": "Full Accounts"}, {"name": "parentSuite", "value": "Tests.homework"}, {"name": "suite", "value": "final_work"}, {"name": "subSuite", "value": "TestValidate"}, {"name": "host", "value": "Admin"}, {"name": "thread", "value": "9964-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "Tests.homework.final_work"}]}