{"name": "test_apply_promo_code_3", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"(//*[contains(@data-product_id, \"419\")])[2]\"}\n  (Session info: chrome=132.0.6834.160); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nStacktrace:\n\tGetHandleVerifier [0x005674A3+25091]\n\t(No symbol) [0x004EDC04]\n\t(No symbol) [0x003CB373]\n\t(No symbol) [0x0040F4DC]\n\t(No symbol) [0x0040F65B]\n\t(No symbol) [0x0044D8E2]\n\t(No symbol) [0x00431F54]\n\t(No symbol) [0x0044B49E]\n\t(No symbol) [0x00431CA6]\n\t(No symbol) [0x004031D5]\n\t(No symbol) [0x0040435D]\n\tGetHandleVerifier [0x008607C3+3142947]\n\tGetHandleVerifier [0x00871A2B+3213195]\n\tGetHandleVerifier [0x0086C412+3191154]\n\tGetHandleVerifier [0x00608720+685184]\n\t(No symbol) [0x004F6E1D]\n\t(No symbol) [0x004F3E18]\n\t(No symbol) [0x004F3FB6]\n\t(No symbol) [0x004E66F0]\n\tBaseThreadInitThunk [0x7606FCC9+25]\n\tRtlGetAppContainerNamedObjectPath [0x7707809E+286]\n\tRtlGetAppContainerNamedObjectPath [0x7707806E+238]", "trace": "self = <final_work.TestValidate object at 0x000001962DDC7FB0>\nget_driver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"622675ed2a16cf149932c2da3544db75\")>\n\n    def test_apply_promo_code_3(self, get_driver):\n        server = Server(\n            r\"C:\\Program Files (x86)\\browsermob-proxy-2.1.4-bin\\browsermob-proxy-2.1.4\\bin\\browsermob-proxy.bat\")\n        server.start()\n        time.sleep(3)\n        proxy = server.create_proxy()\n        options = webdriver.ChromeOptions()\n        options.add_argument(f'--proxy-server={proxy.proxy}')\n        service = Service(executable_path=ChromeDriverManager().install())\n        driver = webdriver.Chrome(service=service, options=options)\n        proxy.new_har(\"500\", options={'captureHeaders': True, 'captureContent': True})\n        driver.get(\"https://pizzeria.skillbox.cc/\")\n>       driver.find_element(By.XPATH, '(//*[contains(@data-product_id, \"419\")])[2]').click()\n\nfinal_work.py:273: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n..\\..\\..\\..\\miniconda3\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:748: in find_element\n    return self.execute(Command.FIND_ELEMENT, {\"using\": by, \"value\": value})[\"value\"]\n..\\..\\..\\..\\miniconda3\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:354: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x000001962DDC7A70>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"no such element\",\"message\":\"no such element: Unable to locate element: {\\...\\n\\\\tRtlGetAppContainerNamedObjectPath [0x7707809E+286]\\\\n\\\\tRtlGetAppContainerNamedObjectPath [0x7707806E+238]\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"(//*[contains(@data-product_id, \"419\")])[2]\"}\nE         (Session info: chrome=132.0.6834.160); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nE       Stacktrace:\nE       \tGetHandleVerifier [0x005674A3+25091]\nE       \t(No symbol) [0x004EDC04]\nE       \t(No symbol) [0x003CB373]\nE       \t(No symbol) [0x0040F4DC]\nE       \t(No symbol) [0x0040F65B]\nE       \t(No symbol) [0x0044D8E2]\nE       \t(No symbol) [0x00431F54]\nE       \t(No symbol) [0x0044B49E]\nE       \t(No symbol) [0x00431CA6]\nE       \t(No symbol) [0x004031D5]\nE       \t(No symbol) [0x0040435D]\nE       \tGetHandleVerifier [0x008607C3+3142947]\nE       \tGetHandleVerifier [0x00871A2B+3213195]\nE       \tGetHandleVerifier [0x0086C412+3191154]\nE       \tGetHandleVerifier [0x00608720+685184]\nE       \t(No symbol) [0x004F6E1D]\nE       \t(No symbol) [0x004F3E18]\nE       \t(No symbol) [0x004F3FB6]\nE       \t(No symbol) [0x004E66F0]\nE       \tBaseThreadInitThunk [0x7606FCC9+25]\nE       \tRtlGetAppContainerNamedObjectPath [0x7707809E+286]\nE       \tRtlGetAppContainerNamedObjectPath [0x7707806E+238]\n\n..\\..\\..\\..\\miniconda3\\Lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:229: NoSuchElementException"}, "attachments": [{"name": "log", "source": "56b844f1-173c-4d91-844c-8a4d7836086b-attachment.txt", "type": "text/plain"}], "start": 1738599274958, "stop": 1738599281697, "uuid": "135d1fc0-55ed-4d6d-be23-8766977b649d", "historyId": "4d3e7211570903f0b6223686b47abcb9", "testCaseId": "4d3e7211570903f0b6223686b47abcb9", "fullName": "Tests.homework.final_work.TestValidate#test_apply_promo_code_3", "labels": [{"name": "story", "value": "Waiting page load"}, {"name": "feature", "value": "Full Accounts"}, {"name": "parentSuite", "value": "Tests.homework"}, {"name": "suite", "value": "final_work"}, {"name": "subSuite", "value": "TestValidate"}, {"name": "host", "value": "Admin"}, {"name": "thread", "value": "4600-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "Tests.homework.final_work"}]}