{"uuid": "83cf79e3-e753-467b-a0e4-75cb849c5050", "children": ["217a7802-5195-46b6-bd52-301350b39aed"], "befores": [{"name": "get_driver", "status": "broken", "statusDetails": {"message": "KeyboardInterrupt\n", "trace": "  File \"C:\\Users\\Serjan777\\miniconda3\\Lib\\site-packages\\pluggy\\_callers.py\", line 39, in _multicall\n    res = hook_impl.function(*args)\n          ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\Serjan777\\miniconda3\\Lib\\site-packages\\_pytest\\fixtures.py\", line 1123, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\Serjan777\\miniconda3\\Lib\\site-packages\\_pytest\\fixtures.py\", line 895, in call_fixture_func\n    fixture_result = next(generator)\n                     ^^^^^^^^^^^^^^^\n  File \"C:\\Users\\Serjan777\\PycharmProjects\\pythonProject\\src\\fixtures\\system\\browser.py\", line 35, in get_driver\n    service = Service(executable_path=ChromeDriverManager().install())\n                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\Serjan777\\miniconda3\\Lib\\site-packages\\webdriver_manager\\chrome.py\", line 40, in install\n    driver_path = self._get_driver_binary_path(self.driver)\n                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\Serjan777\\miniconda3\\Lib\\site-packages\\webdriver_manager\\core\\manager.py\", line 40, in _get_driver_binary_path\n    file = self._download_manager.download_file(driver.get_driver_download_url(os_type))\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\Serjan777\\miniconda3\\Lib\\site-packages\\webdriver_manager\\core\\download_manager.py\", line 32, in download_file\n    return File(response, file_name)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\Serjan777\\miniconda3\\Lib\\site-packages\\webdriver_manager\\core\\file_manager.py\", line 12, in __init__\n    self.content = stream.content\n                   ^^^^^^^^^^^^^^\n  File \"C:\\Users\\Serjan777\\miniconda3\\Lib\\site-packages\\requests\\models.py\", line 902, in content\n    self._content = b\"\".join(self.iter_content(CONTENT_CHUNK_SIZE)) or b\"\"\n                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\Serjan777\\miniconda3\\Lib\\site-packages\\requests\\models.py\", line 820, in generate\n    yield from self.raw.stream(chunk_size, decode_content=True)\n  File \"C:\\Users\\Serjan777\\miniconda3\\Lib\\site-packages\\urllib3\\response.py\", line 940, in stream\n    data = self.read(amt=amt, decode_content=decode_content)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\Serjan777\\miniconda3\\Lib\\site-packages\\urllib3\\response.py\", line 879, in read\n    data = self._raw_read(amt)\n           ^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\Serjan777\\miniconda3\\Lib\\site-packages\\urllib3\\response.py\", line 814, in _raw_read\n    data = self._fp_read(amt) if not fp_closed else b\"\"\n           ^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\Serjan777\\miniconda3\\Lib\\site-packages\\urllib3\\response.py\", line 799, in _fp_read\n    return self._fp.read(amt) if amt is not None else self._fp.read()\n           ^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\Serjan777\\miniconda3\\Lib\\http\\client.py\", line 479, in read\n    s = self.fp.read(amt)\n        ^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\Serjan777\\miniconda3\\Lib\\socket.py\", line 707, in readinto\n    return self._sock.recv_into(b)\n           ^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\Serjan777\\miniconda3\\Lib\\ssl.py\", line 1252, in recv_into\n    return self.read(nbytes, buffer)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\Serjan777\\miniconda3\\Lib\\ssl.py\", line 1104, in read\n    return self._sslobj.read(len, buffer)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n"}, "start": 1736438217251, "stop": 1736438328280}], "start": 1736438217251, "stop": 1736438329309}