{"name": "test_4[chromium]", "status": "broken", "statusDetails": {"message": "AttributeError: 'dict' object has no attribute '_impl_obj'", "trace": "self = <module_7.TestValidate object at 0x000001FFF0199610>\npage = <Page url='https://skillbox.ru/code/?type=profession'>\ngo_to_url = <function go_to_url.<locals>.callback at 0x000001FFF0F53BA0>, x = 0\ny = 0\n\n    def test_4(self, page, go_to_url, x=0, y=0):\n        # Шаг 1: Перейдите на сайт Skillbox\n        go_to_url('https://skillbox.ru/code/')\n    \n        # Шаг 2: Выбор радиокнопки \"Профессия\" в разделе \"Тип обучения на платформе\"\n        profession_radio = page.locator('(//*[contains\\\n            (@class, \"ui-radio-field__value ui-radio-field__value--small\")])[2]')\n        profession_radio.check()\n    \n        # Шаг 3: Установка диапазона от 6 до 12 месяцев (через движение мышки)\n        # Предположим, что существует ползунок для длительности с возможностью перемещения\n        duration_slider_1 = page.locator('//*[contains(@aria-valuetext, \"1\")]')\n        duration_slider_1.hover()\n>       duration_slider_1.drag_to({ position: { x: 75, y: 0 } })\n\nmodule_7.py:98: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <Locator frame=<Frame name= url='https://skillbox.ru/code/?type=profession'> selector='//*[contains(@aria-valuetext, \"1\")]'>\ntarget = {<function position at 0x000001FFF018DBC0>: {0: 0}}\n\n    def drag_to(\n        self,\n        target: \"Locator\",\n        *,\n        force: typing.Optional[bool] = None,\n        no_wait_after: typing.Optional[bool] = None,\n        timeout: typing.Optional[float] = None,\n        trial: typing.Optional[bool] = None,\n        source_position: typing.Optional[Position] = None,\n        target_position: typing.Optional[Position] = None\n    ) -> None:\n        \"\"\"Locator.drag_to\n    \n        Drag the source element towards the target element and drop it.\n    \n        **Details**\n    \n        This method drags the locator to another target locator or target position. It will first move to the source\n        element, perform a `mousedown`, then move to the target element or position and perform a `mouseup`.\n    \n        **Usage**\n    \n        ```py\n        source = page.locator(\\\"#source\\\")\n        target = page.locator(\\\"#target\\\")\n    \n        source.drag_to(target)\n        # or specify exact positions relative to the top-left corners of the elements:\n        source.drag_to(\n          target,\n          source_position={\\\"x\\\": 34, \\\"y\\\": 7},\n          target_position={\\\"x\\\": 10, \\\"y\\\": 20}\n        )\n        ```\n    \n        Parameters\n        ----------\n        target : Locator\n            Locator of the element to drag to.\n        force : Union[bool, None]\n            Whether to bypass the [actionability](../actionability.md) checks. Defaults to `false`.\n        no_wait_after : Union[bool, None]\n            This option has no effect.\n            Deprecated: This option has no effect.\n        timeout : Union[float, None]\n            Maximum time in milliseconds. Defaults to `30000` (30 seconds). Pass `0` to disable timeout. The default value can\n            be changed by using the `browser_context.set_default_timeout()` or `page.set_default_timeout()` methods.\n        trial : Union[bool, None]\n            When set, this method only performs the [actionability](../actionability.md) checks and skips the action. Defaults\n            to `false`. Useful to wait until the element is ready for the action without performing it.\n        source_position : Union[{x: float, y: float}, None]\n            Clicks on the source element at this point relative to the top-left corner of the element's padding box. If not\n            specified, some visible point of the element is used.\n        target_position : Union[{x: float, y: float}, None]\n            Drops on the target element at this point relative to the top-left corner of the element's padding box. If not\n            specified, some visible point of the element is used.\n        \"\"\"\n    \n        return mapping.from_maybe_impl(\n            self._sync(\n                self._impl_obj.drag_to(\n>                   target=target._impl_obj,\n                    force=force,\n                    noWaitAfter=no_wait_after,\n                    timeout=timeout,\n                    trial=trial,\n                    sourcePosition=source_position,\n                    targetPosition=target_position,\n                )\n            )\n        )\nE       AttributeError: 'dict' object has no attribute '_impl_obj'\n\n..\\..\\..\\..\\miniconda3\\Lib\\site-packages\\playwright\\sync_api\\_generated.py:16358: AttributeError"}, "steps": [{"name": "Открытие страницы 'https://skillbox.ru/code/'", "status": "passed", "parameters": [{"name": "url", "value": "'https://skillbox.ru/code/'"}], "start": 1734706043038, "stop": 1734706049008}], "parameters": [{"name": "browser_name", "value": "'chromium'"}], "start": 1734706043036, "stop": 1734706050459, "uuid": "cd857918-29de-4338-a397-416cd072dbec", "historyId": "9808811551ec276a6f0c854eb9118b9b", "testCaseId": "2625270973a6db0ba7dc8f0ee0858324", "fullName": "Tests.homework.module_7.TestValidate#test_4", "labels": [{"name": "parentSuite", "value": "Tests.homework"}, {"name": "suite", "value": "module_7"}, {"name": "subSuite", "value": "TestValidate"}, {"name": "host", "value": "Admin"}, {"name": "thread", "value": "8112-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "Tests.homework.module_7"}]}